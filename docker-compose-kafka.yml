services:
  thingsboard:
    image: thingsboard/tb-postgres:3.9.0
    hostname: thingsboard
    container_name: thingsboard
    restart: unless-stopped
    stdin_open: true
    tty: true 
    depends_on:
      - kafka
    ports:
      - "9090:9090"                # HTTP access
      - "1883"                     # MQTT
      - "7070:7070"                # CoAP
      - "5683-5688:5683-5688/udp"  # LwM2M
    environment:
      TB_QUEUE_TYPE: kafka
      TB_KAFKA_SERVERS: kafka:9094
    volumes:
      - ~/.mytb-data:/data
      - ~/.mytb-logs:/var/log/thingsboard
    networks:
      - virt_network

  nodered:
    image: nodered/node-red
    hostname: nodered
    container_name: nodered
    restart: unless-stopped
    stdin_open: true
    tty: true
    depends_on:
      - mqtt
    ports:
      - "1880:1880"                # UI
    volumes:
      - ./data/nodered:/data
    networks:
      - virt_network

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt
    hostname: zigbee2mqtt
    container_name: zigbee2mqtt
    restart: unless-stopped
    stdin_open: true
    tty: true 
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    ports:
      - "1717:8080"
    volumes:
      - "./data/zigbee2mqtt:/app/data"
      - "/run/udev:/run/udev:ro"
    environment:
      TZ: 'Europe/Lisbon'
    networks:
      - virt_network

  kafka:
    image: bitnami/kafka:3.8.1
    hostname: kafka
    container_name: kafka
    restart: unless-stopped
    stdin_open: true
    tty: true 
    ports:
      - 9092:9092 #to localhost:9092 from host machine
      - 9093 #for Kraft
      - 9094 #to kafka:9094 from within Docker network
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "OUTSIDE://:9092,CONTROLLER://:9093,INSIDE://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "OUTSIDE://localhost:9092,INSIDE://kafka:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INSIDE"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker" #KRaft
      KAFKA_CFG_NODE_ID: "0" #KRaft
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER" #KRaft
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093" #KRaft

    networks:
      - virt_network

    volumes:
      - kafka-data:/bitnami

  mqtt:
    container_name: mqttbroker
    hostname: mqttbroker
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/mqtt/Dockerfile
    ports:
      - '0.0.0.0:8083:8083'
      - '0.0.0.0:1883:1883'
      - '0.0.0.0:8883:8883'
    networks:
      - virt_network

  leproxy:
    hostname: leproxy
    restart: unless-stopped
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: ./src/leproxy/Dockerfile
    ports:
      - '0.0.0.0:80:80'
    volumes:
      - ./root/www:/var/www/leenedge
    depends_on:
      - thingsboard
      - zigbee2mqtt
    networks:
      - virt_network

volumes:
  kafka-data:
    driver: local

networks:
  virt_network:
    driver: bridge