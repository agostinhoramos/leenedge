services:
  thingsboard:
    image: thingsboard/tb-postgres:3.9.0
    hostname: thingsboard
    container_name: thingsboard
    restart: unless-stopped
    stdin_open: true
    tty: true 
    ports:
      - "9090:9090"                # HTTP access
      - "1883:1883"                # MQTT
      - "7070:7070"                # CoAP
      - "5683-5688:5683-5688/udp"  # LwM2M
    environment:
      TB_QUEUE_TYPE: rabbitmq
      TB_QUEUE_RABBIT_MQ_USERNAME: 'RABBITMQ_USER'
      TB_QUEUE_RABBIT_MQ_PASSWORD: 'RABBITMQ_PASS'
      TB_QUEUE_RABBIT_MQ_HOST: 'rabbitmq'
      TB_QUEUE_RABBIT_MQ_PORT: 5672
    volumes:
      - ~/.mytb-data:/data
      - ~/.mytb-logs:/var/log/thingsboard
    networks:
      - virt_network

  nodered:
    image: nodered/node-red
    hostname: nodered
    container_name: nodered
    restart: unless-stopped
    stdin_open: true
    tty: true 
    ports:
      - "1880:1880"                # UI
    volumes:
      - ./data/nodered:/data
    networks:
      - virt_network

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt
    hostname: zigbee2mqtt
    container_name: zigbee2mqtt
    restart: unless-stopped
    stdin_open: true
    tty: true 
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    ports:
      - "1717:8080"
    volumes:
      - "./data/zigbee2mqtt:/app/data"
      - "/run/udev:/run/udev:ro"
    environment:
      TZ: 'Europe/Lisbon'
    networks:
      - virt_network

  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    stdin_open: true
    tty: true 
    ports:
      - "5672:5672"               # AMQP
      - "15672:15672"             # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: 'RABBITMQ_USER'
      RABBITMQ_DEFAULT_PASS: 'RABBITMQ_PASS'
      RABBITMQ_DEFAULT_VHOST: /
    networks:
      - virt_network

  mqtt:
    container_name: mqttbroker
    hostname: mqttbroker
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/mqtt/Dockerfile
    ports:
      - '0.0.0.0:8083:8083'
      - '0.0.0.0:1883:1883'
      - '0.0.0.0:8883:8883'
    networks:
      - virt_network

  leproxy:
    hostname: leproxy
    restart: unless-stopped
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: ./src/leproxy/Dockerfile
    ports:
      - '0.0.0.0:80:80'
    volumes:
      - ./root/www:/var/www/leenedge
    depends_on:
      - thingsboard
      - zigbee2mqtt
    networks:
      - virt_network

networks:
  virt_network:
    driver: bridge